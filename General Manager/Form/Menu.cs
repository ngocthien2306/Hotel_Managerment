using DevExpress.XtraBars;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using General_Manager.Form;
using System.Data.Entity;
using DevExpress.XtraEditors;
namespace General_Manager.Form
{
    public partial class Menu : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        public Menu()
        {
            InitializeComponent();
            //// This line of code is generated by Data Source Configuration Wizard
            //// Instantiate a new DBContext
            //General_Manager.Hotel_Management_Entities dbContext = new General_Manager.Hotel_Management_Entities();
            //// Call the Load method to get the data for the given DbSet from the database.
            //dbContext.Employees.Load();
            //// This line of code is generated by Data Source Configuration Wizard
            //GridControl.DataSource = dbContext.Employees.Local.ToBindingList();
        }
        Hotel_Management_Entities db;
        public void Skin()
        {
            //DevExpress.LookAndFeel.DefaultLookAndFeel theme = new DevExpress.LookAndFeel.DefaultLookAndFeel();
            //theme.LookAndFeel.SkinName = "Valentine";
        }


        private void M010103_ItemClick(object sender,DevExpress.XtraBars.ItemClickEventArgs e)
        {
            DialogResult delete = MessageBox.Show("Are you sure close program?", "Close Program", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (delete == DialogResult.Yes)
            {
                Application.Exit();
                var changed = db.ChangeTracker.Entries().Where(x => x.State != System.Data.Entity.EntityState.Unchanged).ToList();
                foreach(var obj in changed)
                {
                    switch (obj.State)
                    {
                        case System.Data.Entity.EntityState.Modified:
                            obj.CurrentValues.SetValues(obj.OriginalValues);
                            break;
                        case System.Data.Entity.EntityState.Added:
                            obj.State = System.Data.Entity.EntityState.Detached;
                            break;
                        case System.Data.Entity.EntityState.Deleted:
                            obj.State = System.Data.Entity.EntityState.Unchanged;
                            break;
                    }
                }
                employeeBindingSource1.ResetBindings(false);
                
            }
            else
            {
            }

        }

        private void Manager_Load(object sender, EventArgs e)
        {
            this.ReloadData();
        }

        private void M010201_ItemClick(object sender, ItemClickEventArgs e)
        {
            Display_User display = new Display_User();
            display.Show();
        }

        private void M010202_ItemClick(object sender, ItemClickEventArgs e)
        {

        }
        private void M010101_ItemClick(object sender, ItemClickEventArgs e)
        {          
            Login login = new Login();
            this.Hide();
            login.Show();
        }
        public void ReloadData()
        {
            // TODO: This line of code loads data into the 'hotel_ManagementDataSet.Employee' table. You can move, or remove it, as needed.
            this.employeeTableAdapter.Fill(this.hotel_ManagementDataSet.Employee);
            db = new Hotel_Management_Entities();
            db.Employees.Load();
            employeeBindingSource1.DataSource = db.Employees.Local;
        }
        private void M010501_ItemClick(object sender, ItemClickEventArgs e)
        {
            employeeBindingSource1.AddNew();
        }

        private void M010503_ItemClick(object sender, ItemClickEventArgs e)
        {
            try
            {
                int id = Convert.ToInt32(IdTextEdit.Text);
                db.SaveChanges();
                XtraMessageBox.Show("You data has been successfully saved", "Message", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch
            {
                XtraMessageBox.Show("ID already exist in list! Please change another ID", "Message", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void M010502_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (XtraMessageBox.Show("Are you sure want to remove this record?", "Message", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                employeeBindingSource1.RemoveCurrent();
        }
        OpenFileDialog open;
        private void PicturePictureEdit_Click_1(object sender, EventArgs e)
        {
            open = new OpenFileDialog();
            open.Filter = "Select Image(*.jpg;*.png;*.gif)|*.jpg;*.pnq;*.gif";
            if (open.ShowDialog() == DialogResult.OK)
            {
                PicturePictureEdit.Image = Image.FromFile(open.FileName);
            }

        }
        private void Room_item_ItemClick(object sender, ItemClickEventArgs e)
        {
            Book_Room BR = new Book_Room();
            BR.Show();
        }

        private void Attendance_item_ItemClick(object sender, ItemClickEventArgs e)
        {
            Attendance Att = new Attendance();
            Att.Show();
        }

        private void M030101_ItemClick(object sender, ItemClickEventArgs e)
        {
            PrintList print = new PrintList();
            print.ShowDialog();
        }

        private void M010402_ItemClick(object sender, ItemClickEventArgs e)
        {
            Statics sta = new Statics();
            sta.ShowDialog();
        }

        private void M010301_ItemClick(object sender, ItemClickEventArgs e)
        {
            Schedule s = new Schedule();
            WorkShift w = new WorkShift();
            w.DeleteData();
            w.InsertShift();
            s.GridControl_DisplayShift.DataSource = w.ShowReloadShift();
            s.ShowDialog();
        }

        private void M010401_ItemClick(object sender, ItemClickEventArgs e)
        {
            this.ReloadData();
        }
    }
}